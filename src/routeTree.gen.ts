/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as ProfileImport } from './routes/profile'
import { Route as PostsImport } from './routes/posts'
import { Route as Layout1Import } from './routes/_layout1'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as SnippetsSlugImport } from './routes/snippets.$slug'
import { Route as ProductsIdImport } from './routes/products/$id'
import { Route as Layout1UserIndexImport } from './routes/_layout1/user/index'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PostsRoute = PostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const Layout1Route = Layout1Import.update({
  id: '/_layout1',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const SnippetsSlugRoute = SnippetsSlugImport.update({
  path: '/snippets/$slug',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIdRoute = ProductsIdImport.update({
  path: '/products/$id',
  getParentRoute: () => rootRoute,
} as any)

const Layout1UserIndexRoute = Layout1UserIndexImport.update({
  path: '/user/',
  getParentRoute: () => Layout1Route,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout1': {
      preLoaderRoute: typeof Layout1Import
      parentRoute: typeof rootRoute
    }
    '/posts': {
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/products/$id': {
      preLoaderRoute: typeof ProductsIdImport
      parentRoute: typeof rootRoute
    }
    '/snippets/$slug': {
      preLoaderRoute: typeof SnippetsSlugImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout1/user/': {
      preLoaderRoute: typeof Layout1UserIndexImport
      parentRoute: typeof Layout1Import
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  Layout1Route.addChildren([Layout1UserIndexRoute]),
  PostsRoute,
  ProfileRoute,
  SearchRoute,
  ProductsIdRoute,
  SnippetsSlugRoute,
  ProductsIndexRoute,
])

/* prettier-ignore-end */
